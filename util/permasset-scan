#!/usr/bin/perl

use strict;
use Cwd;
use Cwd qw(abs_path);
use File::Spec;

my $file = undef;

for (my $i=0;$i < @ARGV;) {
    my $a = $ARGV[$i++];

    if ($a =~ s/^-+//) {
        if ($a eq "file") {
            $file = $ARGV[$i++];
        }
        else {
            die "Unknown switch $a";
        }
    }
    else {
        die "Unexpected arg";
    }
}

die "--file spec required" unless defined($file);
die "$file does not exist" unless ( -f $file || -d $file );

# do NOT allow scanning the file if we're in the same directory.
# You're supposed to use this tool in a temporary directory or a directory
# where the gathered data is to reside. The generated filenames could
# overwrite the file to scan.
my $pwd = abs_path(getcwd);
die if (!defined($pwd) || $pwd eq "");
my @fpt = File::Spec->splitpath($file); # ($vol,$dir,$file)
die unless @fpt >= 3;
my $fabs = abs_path($fpt[1]);
die "Do not run this tool in the same directory as the file to scan" if $pwd eq $fabs;

# use the identify tool
open(T,"-|","permasset-identify","--file",$file) || die "Cannot run identify";
my $mime_type = <T>; chomp $mime_type;
close(T);

# the tool will at least emit application/octet if it doesn't know!
die "Failed to obtain MIME type" unless $mime_type ne "";

# stat
#          0    1    2     3      4    5    6     7     8      9      10     11       12
my @st; # ($dev,$ino,$mode,$nlink,$uid,$gid,$rdev,$size,$atime,$mtime,$ctime,$blksize,$blocks)
@st = stat($file);

# base info
open(T,">","fileinfo.flat.txt") || die;
print T "mimetype=$mime_type\n";
print T "filesize=$st[7]\n";
print T "unixmode=0".sprintf("%o",$st[2])."\n";
print T "hardlinks=$st[3]\n";
close(T);

# image thumbnails
if ($mime_type =~ m/^image\/(gif|png|tiff|webp|jpeg)$/) {
    system("image-thumbnail",$file);
}

# gif video preview
if ($mime_type =~ m/^image\/(gif)$/) {
    system("gif-preview-video",$file);
}

# video preview
if ($mime_type =~ m/^video\/(quicktime|mpeg|MP2T|x-msvideo|x-ms-asf|x-flv|webm)$/i) {
    system("video-thumbnail",$file);
    system("video-preview-video",$file);
    system("video-preview-video-audio-only",$file) unless ( -f "preview.mp4" && ( -s "preview.mp4" > 32 ) );
}
# audio preview
elsif ($mime_type =~ m/^audio\/(aac|x-wav|mpeg|x-msvideo|x-ms-asf|quicktime|x-flv|webm)$/i) {
    system("video-thumbnail",$file);
    system("video-preview-video",$file);
    system("video-preview-video-audio-only",$file) unless ( -f "preview.mp4" && ( -s "preview.mp4" > 32 ) );
}

# text dictionary
if ($mime_type eq "text/plain") {
    system("text-dictionary","--file",$file);
}
elsif ($mime_type eq "text/rtf") {
    system("rtf-text-dictionary",$file);
}
elsif ($mime_type eq "application/pdf") {
    system("pdf-text-dictionary",$file);
    system("pdf-image-thumbnail",$file);
    system("pdf-thumbnail",$file);
}
elsif ($mime_type eq "text/html") {
    system("html-text-dictionary",$file);
}

